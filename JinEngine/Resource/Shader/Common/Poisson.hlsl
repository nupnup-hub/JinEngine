
#ifdef USE_POISSON16_F2
static const float2 poissonDiskF2_16[16] =
{
	float2(-0.94201624, -0.39906216),
	float2(0.94558609, -0.76890725),
	float2(-0.094184101, -0.92938870),
	float2(0.34495938, 0.29387760),
	float2(-0.91588581, 0.45771432),
	 float2(-0.81544232, -0.87912464),
	float2(-0.38277543, 0.27676845),
	 float2(0.97484398, 0.75648379),
	float2(0.44323325, -0.97511554),
	float2(0.53742981, -0.47373420),
	float2(-0.26496911, -0.41893023),
	float2(0.79197514, 0.19090188),
	 float2(-0.24188840, 0.99706507),
	float2(-0.81409955, 0.91437590),
	float2(0.19984126, 0.78641367),
	float2(0.14383161, -0.14100790)
};  
#endif

#ifdef USE_POISSON32_F2
static const float2 poissonDiskF2_32[32] =
{
    float2(-0.975402, -0.0711386),
    float2(-0.920347, -0.41142),
    float2(-0.883908, 0.217872),
    float2(-0.884518, 0.568041),
    float2(-0.811945, 0.90521),
    float2(-0.792474, -0.779962),
    float2(-0.614856, 0.386578),
    float2(-0.580859, -0.208777),
    float2(-0.53795, 0.716666),
    float2(-0.515427, 0.0899991),
    float2(-0.454634, -0.707938),
    float2(-0.420942, 0.991272),
    float2(-0.261147, 0.588488),
    float2(-0.211219, 0.114841),
    float2(-0.146336, -0.259194),
    float2(-0.139439, -0.888668),
    float2(0.0116886, 0.326395),
    float2(0.0380566, 0.625477),
    float2(0.0625935, -0.50853),
    float2(0.125584, 0.0469069),
    float2(0.169469, -0.997253),
    float2(0.320597, 0.291055),
    float2(0.359172, -0.633717),
    float2(0.435713, -0.250832),
    float2(0.507797, -0.916562),
    float2(0.545763, 0.730216),
    float2(0.56859, 0.11655),
    float2(0.743156, -0.505173),
    float2(0.736442, -0.189734),
    float2(0.843562, 0.357036),
    float2(0.865413, 0.763726),
    float2(0.872005, -0.927)
}; 
#endif

// samples = 8, min distance = 0.5, average samples on radius = 2
#ifdef USE_POISSON8_F3
static const float3 poissonDiskF3_8[8] =
{
    float3(-0.4706069, -0.4427112, +0.6461146),
    float3(-0.9057375, +0.3003471, +0.9542373),
    float3(-0.3487388, +0.4037880, +0.5335386),
    float3(+0.1023042, +0.6439373, +0.6520134),
    float3(+0.5699277, +0.3513750, +0.6695386),
    float3(+0.2939128, -0.1131226, +0.3149309),
    float3(+0.7836658, -0.4208784, +0.8895339),
    float3(+0.1564120, -0.8198990, +0.8346850)
}; 
#endif

// samples = 16, min distance = 0.38, average samples on radius = 2
#ifdef USE_POISSON16_F3
static const float3 poissonDiskF3_16[16] =
{
    float3(-0.0936476, -0.7899283, +0.7954600),
    float3(-0.1209752, -0.2627860, +0.2892948),
    float3(-0.5646901, -0.7059856, +0.9040413),
    float3(-0.8277994, -0.1538168, +0.8419688),
    float3(-0.4620740, +0.1951437, +0.5015910),
    float3(-0.7517998, +0.5998214, +0.9617633),
    float3(-0.0812514, +0.2904110, +0.3015631),
    float3(-0.2397440, +0.7581663, +0.7951688),
    float3(+0.2446934, +0.9202285, +0.9522055),
    float3(+0.4943011, +0.5736654, +0.7572486),
    float3(+0.3415412, +0.1412707, +0.3696049),
    float3(+0.8744238, +0.3246290, +0.9327384),
    float3(+0.7406740, -0.1434729, +0.7544418),
    float3(+0.3658852, -0.3596551, +0.5130534),
    float3(+0.7880974, -0.5802425, +0.9786618),
    float3(+0.3776688, -0.7620423, +0.8504953)
}; 
#endif

// samples = 32, min distance = 0.26, average samples on radius = 3
#ifdef USE_POISSON32_F3
static const float3 poissonDiskF3_32[32] =
{
    float3(-0.1078042, -0.6434212, +0.6523899),
    float3(-0.1141091, -0.9539828, +0.9607830),
    float3(-0.1982531, -0.3867292, +0.4345846),
    float3(-0.5254982, -0.6604451, +0.8440000),
    float3(-0.1820032, -0.0936076, +0.2046645),
    float3(-0.4654744, -0.2629388, +0.5346057),
    float3(-0.7419540, -0.4592809, +0.8726023),
    float3(-0.7180300, -0.1888005, +0.7424370),
    float3(-0.9541028, -0.0789064, +0.9573601),
    float3(-0.6718881, +0.1745270, +0.6941854),
    float3(-0.3968981, +0.1973703, +0.4432642),
    float3(-0.8614085, +0.4183342, +0.9576158),
    float3(-0.5961362, +0.6559430, +0.8863631),
    float3(-0.0866527, +0.2057932, +0.2232925),
    float3(-0.3287578, +0.7094890, +0.7819567),
    float3(-0.0408453, +0.5730602, +0.5745140),
    float3(-0.0678108, +0.8920295, +0.8946033),
    float3(+0.2702191, +0.9020523, +0.9416564),
    float3(+0.2961993, +0.4006296, +0.4982350),
    float3(+0.5824130, +0.7839746, +0.9766376),
    float3(+0.6095408, +0.4801217, +0.7759233),
    float3(+0.5025840, +0.2096348, +0.5445525),
    float3(+0.2740403, +0.0734566, +0.2837146),
    float3(+0.9130731, +0.4032195, +0.9981425),
    float3(+0.7560658, +0.1432026, +0.7695079),
    float3(+0.6737013, -0.1910683, +0.7002717),
    float3(+0.8628370, -0.3914889, +0.9474974),
    float3(+0.7032576, -0.5988359, +0.9236751),
    float3(+0.4578032, -0.4541197, +0.6448321),
    float3(+0.1706552, -0.3115532, +0.3552304),
    float3(+0.2061829, -0.5709705, +0.6070574),
    float3(+0.3269635, -0.9024802, +0.9598832)
}; 
#endif