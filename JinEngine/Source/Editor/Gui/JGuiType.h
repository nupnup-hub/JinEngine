#pragma once  
#include"../../Core/JCoreEssential.h"
namespace JinEngine
{ 
	namespace Editor
	{
		using GuiFlag = int;
		using GuiID = size_t; 

		enum class J_GUI_TYPE
		{
			IM_GUI,
			COUNT
		};

		enum class J_GUI_FONT_TYPE
		{
			DEFAULT = 0,
			//BOLD,
			//SEMI_BOLD,
			//REGULAR,
			MEDIUM,
		};
		enum class J_GUI_COLOR
		{
			TEXT,
			TEXT_DISABLED,
			WINDOW_BG,              // BACKGROUND OF NORMAL WINDOWS
			CHILD_BG,               // BACKGROUND OF CHILD WINDOWS
			POPUP_BG,               // BACKGROUND OF POPUPS, MENUS, TOOLTIPS WINDOWS
			BORDER,
			BORDER_SHADOW,
			FRAME_BG,               // BACKGROUND OF CHECKBOX, RADIO BUTTON, PLOT, SLIDER, TEXT INPUT
			FRAME_BG_HOVERED,
			FRAME_BG_ACTIVE,
			TITLE_BG,
			TITLE_BG_ACTIVE,
			TITLE_BG_COLLAPSED,
			MENU_BAR_BG,
			SCROLL_BAR_BG,
			SCROLL_BAR_GRAB,
			SCROLL_BAR_GRAB_HOVERED,
			SCROLL_BAR_GRAB_ACTIVE,
			CHECKMARK,
			SLIDER_GRAB,
			SLIDER_GRAB_ACTIVE,
			BUTTON,
			BUTTON_HOVERED,
			BUTTON_ACTIVE,
			HEADER,
			HEADER_HOVERED,
			HEADER_ACTIVE,
			SEPARATOR,
			SEPARATOR_HOVERED,
			SEPARATOR_ACTIVE,
			RESIZE_GRIP,
			RESIZE_GRIP_HOVERED,
			RESIZE_GRIP_ACTIVE,
			TAB,
			TAB_HOVERED,
			TAB_ACTIVE,
			TAB_UNFOCUSED,
			TAB_UNFOCUSED_ACTIVE,
			DOCKING_PREVIEW,
			DOCKING_EMPTYBG,
			PLOT_LINES,
			PLOT_LINESHOVERED,
			PLOT_HISTOGRAM,
			PLOT_HISTOGRAM_HOVERED,
			TABLE_HEADER_BG,
			TABLE_BORDER_STRONG,
			TABLE_BORDER_LIGHT,
			TABLE_ROW_BG,
			TABLE_ROW_BG_ALT,
			TEXT_SELECTED_BG,
			DRAG_DROP_TARGET,
			NAV_HIGHLIGHT,
			NAV_WINDOWING_HIGHLIGHT,
			NAV_WINDOWING_DIM_BG,
			MODAL_WINDOW_DIM_BG,
			COUNT
		};

		using J_GUI_WINDOW_FLAG_ = int;
		enum J_GUI_WINDOW_FLAG
		{
			J_GUI_WINDOW_FLAG_NONE = 0,
			J_GUI_WINDOW_FLAG_NO_DOCKING = 1 << 0,
			J_GUI_WINDOW_FLAG_NO_MOVE = 1 << 1,
			J_GUI_WINDOW_FLAG_NO_TITLE_BAR = 1 << 2,
			J_GUI_WINDOW_FLAG_NO_SCROLL_BAR = 1 << 3,
			J_GUI_WINDOW_FLAG_NO_SCROLL_WITH_MOUSE = 1 << 4,
			J_GUI_WINDOW_FLAG_NO_RESIZE = 1 << 5,
			J_GUI_WINDOW_FLAG_NO_COLLAPSE = 1 << 6,
			J_GUI_WINDOW_FLAG_NO_SAVE = 1 << 7,
			J_GUI_WINDOW_FLAG_NO_FOCUS_ON_APPEARING = 1 << 8,
			J_GUI_WINDOW_FLAG_NO_BRING_TO_FRONT_ON_FOCUS = 1 << 9,
			J_GUI_WINDOW_FLAG_AUTO_RESIZE = 1 << 10,
			J_GUI_WINDOW_FLAG_MENU_BAR = 1 << 11,
			J_GUI_WINDOW_FLAG_NO_BACKGROUND = 1 << 12,
			J_GUI_WINDOW_FLAG_NO_NAV_INPUT = 1 << 13,
			J_GUI_WINDOW_FLAG_NO_NAV_FOCUS = 1 << 14, 
			J_GUI_WINDOW_FLAG_NO_NAV = J_GUI_WINDOW_FLAG_NO_NAV_INPUT | J_GUI_WINDOW_FLAG_NO_NAV_FOCUS,
		};

		using J_GUI_DOCK_NODE_FLAG_ = int;
		enum J_GUI_DOCK_NODE_FLAG
		{
			J_GUI_DOCK_NODE_FLAG_NONE = 0,
			J_GUI_DOCK_NODE_FLAG_NO_WINDOW_MENU_BUTTON = 1 << 0,
			J_GUI_DOCK_NODE_FLAG_NO_SPLIT_ME = 1 << 1,	//Prevent another window/node from splitting this node.
			J_GUI_DOCK_NODE_FLAG_NO_SPLIT_OTHER = 1 << 2,	//Prevent this node from splitting another window/node.
			J_GUI_DOCK_NODE_FLAG_NO_OVER_ME = 1 << 3,		//Prevent another window/node to be docked over this node.
			J_GUI_DOCK_NODE_FLAG_NO_OVER_OTHER = 1 << 4,	//Prevent this node to be docked over another window or non-empty node.
			J_GUI_DOCK_NODE_FLAG_NO_OVER_EMPTY = 1 << 5	//Prevent this node to be docked over an empty node (e.g. DockSpace with no other windows)
		};

		using J_GUI_POPUP_FLAG_ = int;
		enum J_GUI_POPUP_FLAG
		{
			J_GUI_POPUP_FLAG_NONE = 0
		};

		using J_GUI_TREE_NODE_FLAG_ = int;
		enum J_GUI_TREE_NODE_FLAG
		{
			J_GUI_TREE_NODE_FLAG_NONE = 0,
			J_GUI_TREE_NODE_FLAG_DEFAULT_OPEN = 1 << 0,
			J_GUI_TREE_NODE_FLAG_EXTEND_HIT_BOX_WIDTH = 1 << 1,
			J_GUI_TREE_NODE_FLAG_EXTEND_FULL_WIDTH = 1 << 2, 
			J_GUI_TREE_NODE_FLAG_FRAMED = 1 << 3,
			J_GUI_TREE_NODE_FLAG_OPEN_ON_ARROW = 1 << 4,
		};

		using J_GUI_BUTTON_FLAG_ = int;
		enum J_GUI_BUTTON_FLAG
		{
			J_GUI_BUTTON_FLAG_NONE = 0,
			J_GUI_BUTTON_FLAG_MOUSE_BUTTION_LEFT = 1 << 1, // React on left mouse button (default)
			J_GUI_BUTTON_FLAG_MOUSE_BUTTION_RIGHT = 1 << 2,
			J_GUI_BUTTON_FLAG_MOUSE_BUTTION_MIDDLE = 1 << 3, 
		};

		using J_GUI_SELECTABLE_FLAG_ = int;
		enum J_GUI_SELECTABLE_FLAG
		{
			J_GUI_SELECTABLE_FLAG_NONE = 0,
			J_GUI_SELECTABLE_FLAG_ALLOW_ITEM_OVERLAP = 1 << 0,
			J_GUI_SELECTABLE_FLAG_ALLOW_DOUBLE_CLICK = 1 << 1,
			J_GUI_SELECTABLE_FLAG_SPAN_ALL_COLUMNS = 1 << 2,
			J_GUI_SELECTABLE_DONT_CLOSE_POPUP = 1 << 3, 
			J_GUI_SELECTABLE_SELECT_ON_CLICK = 1 << 4, 
		};

		using J_GUI_INPUT_TEXT_FLAG_ = int;
		enum J_GUI_INPUT_TEXT_FLAG
		{
			J_GUI_INPUT_TEXT_FLAG_NONE = 0,
			J_GUI_INPUT_TEXT_FLAG_READ_ONLY = 1 << 0,
			J_GUI_INPUT_TEXT_FLAG_ENTER_RETURN_TRUE = 1 << 1,
			J_GUI_INPUT_TEXT_FLAG_NO_HORIZONTAL_SCROLL = 1 << 2,
		};

		using J_GUI_SLIDER_FLAG_ = int;
		enum J_GUI_SLIDER_FLAG
		{
			J_GUI_SLIDER_FLAG_NONE = 0,
			J_GUI_SLIDER_FLAG_ALWAYS_CLAMP = 1 << 0,
			J_GUI_SLIDER_FLAG_NO_INPUT = 1 << 1
		};

		using J_GUI_TAB_BAR_FLAG_ = int;
		enum J_GUI_TAB_BAR_FLAG
		{
			J_GUI_TAB_BAR_FLAG_NONE = 0
		};

		using J_GUI_TAB_ITEM_FLAG_ = int;
		enum J_GUI_TAB_ITEM_FLAG
		{
			J_GUI_TAB_ITEM_FLAG_NONE = 0
		};

		using J_GUI_TABLE_FLAG_ = int;
		enum J_GUI_TABLE_FLAG
		{
			J_GUI_TABLE_FLAG_NONE = 0,
			J_GUI_TABLE_FLAG_SIZING_FIXED_FIT = 1 << 0,
			J_GUI_TABLE_FLAG_ROW_BG = 1 << 1,
			J_GUI_TABLE_FLAG_CONTEXT_MENU_IN_BODY = 1 << 2,
			J_GUI_TABLE_FLAG_REORDERABLE = 1 << 3,
			J_GUI_TABLE_FLAG_HIDEABLE = 1 << 4,
			J_GUI_TABLE_FLAG_RESIZABLE = 1 << 5,
			J_GUI_TABLE_FLAG_BORDER_INNER_H = 1 << 6,
			J_GUI_TABLE_FLAG_BORDER_OUTHER_H = 1 << 7,
			J_GUI_TABLE_FLAG_BORDER_INNER_V = 1 << 8,
			J_GUI_TABLE_FLAG_BORDER_OUTHER_V = 1 << 9,
			J_GUI_TABLE_FLAG_SCROLLX = 1 << 10,
			J_GUI_TABLE_FLAG_SCROLLY = 1 << 11,

			J_GUI_TABLE_FLAG_BORDER_H = J_GUI_TABLE_FLAG_BORDER_INNER_H | J_GUI_TABLE_FLAG_BORDER_OUTHER_H,      // Draw horizontal borders.
			J_GUI_TABLE_FLAG_BORDER_V = J_GUI_TABLE_FLAG_BORDER_INNER_V | J_GUI_TABLE_FLAG_BORDER_OUTHER_V,      // Draw vertical borders.
			J_GUI_TABLE_FLAG_BORDER_INNER = J_GUI_TABLE_FLAG_BORDER_INNER_H | J_GUI_TABLE_FLAG_BORDER_INNER_V,   // Draw inner borders.
			J_GUI_TABLE_FLAG_BORDER_OUTHER = J_GUI_TABLE_FLAG_BORDER_OUTHER_H | J_GUI_TABLE_FLAG_BORDER_OUTHER_V, // Draw outer borders.
			J_GUI_TABLE_FLAG_BORDERS = J_GUI_TABLE_FLAG_BORDER_INNER | J_GUI_TABLE_FLAG_BORDER_OUTHER				// Draw all borders.
		};

		using J_GUI_TABLE_COLUMN_FLAG_ = int;
		enum J_GUI_TABLE_COLUMN_FLAG
		{
			J_GUI_TABLE_COLUMN_FLAG_NONE = 0,
			J_GUI_TABLE_COLUMN_FLAG_WIDTH_STRETCH = 1 << 0,
			J_GUI_TABLE_COLUMN_FLAG_WIDTH_FIXED = 1 << 1,
			J_GUI_TABLE_COLUMN_FLAG_NO_RESIZE = 1 << 2,
			J_GUI_TABLE_COLUMN_FLAG_NO_REORDER = 1 << 3,
			J_GUI_TABLE_COLUMN_FLAG_NO_HIDE = 1 << 4
		};

		using J_GUI_COMBO_FLAG_ = int;
		enum J_GUI_COMBO_FLAG
		{
			J_GUI_COMBO_FLAG_NONE = 0,
			J_GUI_COMBO_FLAG_POPUP_ALIGN_LEFT = 1 << 0,
			J_GUI_COMBO_FLAG_HEIGHT_SMALL = 1 << 1,
			J_GUI_COMBO_FLAG_HEIGHT_REGULAR = 1 << 2,
			J_GUI_COMBO_FLAG_HEIGHT_LARGE = 1 << 3,
			J_GUI_COMBO_FLAG_HEIGHT_LARGEST = 1 << 4,
			J_GUI_COMBO_FLAG_HEIGHT_NO_ARROW_BUTTON = 1 << 5,
			J_GUI_COMBO_FLAG_HEIGHT_NO_PREVIEW = 1 << 6,
		};

		using J_GUI_COLOR_EDIT_FALG_ = int;
		enum J_GUI_COLOR_EDIT_FALG
		{
			J_GUI_COLOR_EDIT_FALG_NONE,
			J_GUI_COLOR_EDIT_FALG_ALPHA_BAR,
			J_GUI_COLOR_EDIT_FALG_ALPHA_PREVIEW,
			J_GUI_COLOR_EDIT_FALG_DISPLAY_RGB,
			J_GUI_COLOR_EDIT_FALG_INPUT_RGB
		};

		using J_GUI_FOCUS_FLAG_ = int;
		enum J_GUI_FOCUS_FLAG
		{
			J_GUI_FOCUS_FLAG_NONE = 0,
			J_GUI_FOCUS_FLAG_CHILD_WINDOW = 1 << 0,	// Return true if any children of the window is focused
			J_GUI_FOCUS_FLAG_DOCK_HIERARCHY = 1 << 1,	//Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)
			J_GUI_FOCUS_FLAG_NO_POPUP_HIERARCHY = 1 << 2,  // Do not consider popup hierarchy 
		};

		using J_GUI_HOVERED_FLAG_ = int;
		enum J_GUI_HOVERED_FLAG
		{
			J_GUI_HOVERED_FLAG_NONE = 0,
			J_GUI_HOVERED_FLAG_CHILD_WINDOW = 1 << 0,	// Return true if any children of the window is focused
			J_GUI_HOVERED_FLAG_DOCK_HIERARCHY = 1 << 1	//Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)
		};

		using J_GUI_ITEM_FLAG_ = int;
		enum J_GUI_ITEM_FLAG
		{
			J_GUI_ITEM_FLAG_NONE = 0,
			J_GUI_ITEM_FLAG_DISABLED = 1 << 0,
			J_GUI_ITEM_FLAG_INPUTABLE = 1 << 1,
			J_GUI_ITEM_FLAG_READ_ONLY = 1 << 2,
			J_GUI_ITEM_FLAG_NO_NAV = 1 << 3,
			J_GUI_ITEM_FLAG_NO_NAV_DEFAULT_FOCUS = 1 << 4,	//Disable item being a candidate for default focus (e.g. used by title bar items)
		};

		using J_GUI_DRAG_DROP_FLAG_ = int;
		enum J_GUI_DRAG_DROP_FLAG
		{
			J_GUI_DRAG_DROP_FLAG_NONE = 0
		};

		using J_GUI_CONDITION_ = int;
		enum J_GUI_CONDIITON
		{
			J_GUI_CONDIITON_NONE,
			J_GUI_CONDIITON_ONCE,
			J_GUI_CONDIITON_ALWAYS
		};

		enum class J_GUI_STYLE
		{ 
			WINDOW_PADDING,       // JVector2F 
			WINDOW_ROUNDING,      // float 
			WINDOW_BORDER_SIZE,    // float 
			WINDOW_MIN_SIZE,       // JVector2F 
			CHILD_ROUNDING,       // float 
			CHILD_BORDER_SIZE,     // float     
			POPUP_ROUNDING,       // float     
			POPUP_BORDER_SIZE,     // float     
			FRAME_PADDING,        // JVector2F    
			FRAME_ROUNDING,       // float     
			FRAME_BORDER_SIZE,     // float     
			ITEM_SPACING,         // JVector2F    
			ITEM_INNER_SPACING,    // JVector2F    
			INDENT_SPACING,       // float     
			CELL_PADDING,         // JVector2F    
			SCROLL_BAR_SIZE,       // float     
			SCROLL_BAR_ROUNDING,   // float    
			GRAB_MIN_SIZE,         // float     
			GRAB_ROUNDING,        // float     
			TAB_ROUNDING,         // float     
			SELECTABLE_TEXT_ALIGN, // JVector2F    
			COUNT
		};
		 
		enum class J_GUI_CARDINAL_DIR
		{
			NONE = 0,
			LEFT,
			RIGHT,
			UP,
			DOWN
		}; 

		using J_GUI_DRAW_FLAG_ = int;
		enum J_GUI_DRAW_FLAG
		{
			J_GUI_DRAW_FLAG_NONE = 0,
			J_GUI_DRAW_FLAG_ROUND_UP_LEFT = 1 << 0, 
			J_GUI_DRAW_FLAG_ROUND_UP_RIGHT = 1 << 1, 
			J_GUI_DRAW_FLAG_ROUND_DOWN_LEFT = 1 << 2, 
			J_GUI_DRAW_FLAG_ROUND_DOWN_RIGHT = 1 << 3, 
			J_GUI_DRAW_FLAG_ROUND_UP = J_GUI_DRAW_FLAG_ROUND_UP_LEFT | J_GUI_DRAW_FLAG_ROUND_UP_RIGHT,
			J_GUI_DRAW_FLAG_ROUND_DOWN = J_GUI_DRAW_FLAG_ROUND_DOWN_LEFT | J_GUI_DRAW_FLAG_ROUND_DOWN_RIGHT,
			J_GUI_DRAW_FLAG_ROUND_LEFT = J_GUI_DRAW_FLAG_ROUND_UP_LEFT | J_GUI_DRAW_FLAG_ROUND_DOWN_LEFT,
			J_GUI_DRAW_FLAG_ROUND_RIGHT = J_GUI_DRAW_FLAG_ROUND_UP_RIGHT | J_GUI_DRAW_FLAG_ROUND_DOWN_RIGHT,
			J_GUI_DRAW_FLAG_ROUND_ALL = J_GUI_DRAW_FLAG_ROUND_UP_LEFT | J_GUI_DRAW_FLAG_ROUND_UP_RIGHT | J_GUI_DRAW_FLAG_ROUND_DOWN_LEFT | J_GUI_DRAW_FLAG_ROUND_DOWN_RIGHT,
		};
		 
		using J_GUI_ORDINAL_DIR_FLAG_ = int;
		enum J_GUI_ORDINAL_DIR_FLAG
		{
			J_GUI_ORDINAL_DIR_NONE = 0,
			J_GUI_ORDINAL_DIR_UP_LEFT = 1 << 0,
			J_GUI_ORDINAL_DIR_UP_RIGHT = 1 << 1,
			J_GUI_ORDINAL_DIR_DOWN_LEFT= 1 << 2,
			J_GUI_ORDINAL_DIR_DOWN_RIGHT= 1 << 3,

			J_GUI_ORDINAL_DIR_UP_LEFT_DOWN_RIGHT = J_GUI_ORDINAL_DIR_UP_LEFT | J_GUI_ORDINAL_DIR_DOWN_RIGHT,
			J_GUI_ORDINAL_DIR_UP_RIGHT_DOWN_LEFT = J_GUI_ORDINAL_DIR_UP_RIGHT | J_GUI_ORDINAL_DIR_DOWN_LEFT,
			J_GUI_ORDINAL_DIR_UP_LEFT_DOWN_LEFT = J_GUI_ORDINAL_DIR_UP_LEFT | J_GUI_ORDINAL_DIR_DOWN_LEFT,
			J_GUI_ORDINAL_DIR_UP_RIGHT_DOWN_RIGHT = J_GUI_ORDINAL_DIR_UP_RIGHT | J_GUI_ORDINAL_DIR_DOWN_RIGHT,
			J_GUI_ORDINAL_DIR_UP_LEFT_UP_RIGHT = J_GUI_ORDINAL_DIR_UP_LEFT | J_GUI_ORDINAL_DIR_UP_RIGHT,
			J_GUI_ORDINAL_DIR_DOWN_LEFT_DOWN_RIGHT = J_GUI_ORDINAL_DIR_DOWN_LEFT | J_GUI_ORDINAL_DIR_DOWN_RIGHT,
		};
	}
}