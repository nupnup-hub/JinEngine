#pragma once
#include"../Mesh/JMeshType.h"
#include<string>

namespace JinEngine
{
	enum J_SHADER_VERTEX_LAYOUT
	{
		SHADER_VERTEX_LAYOUT_STATIC = 0,
		SHADER_VERTEX_LAYOUT_SKINNED, 
		SHADER_VERTEX_COUNT,
	};
	enum J_SHADER_FUNCTION
	{  
		SHADER_FUNCTION_NONE = 0,
		SHADER_FUNCTION_ALBEDO_MAP = 1 << 0,
		SHADER_FUNCTION_ALBEDO_MAP_ONLY = 1 << 1,
		SHADER_FUNCTION_NORMAL_MAP = 1 << 2,
		SHADER_FUNCTION_HEIGHT_MAP = 1 << 3,
		SHADER_FUNCTION_ROUGHNESS_MAP = 1 << 4,
		SHADER_FUNCTION_AMBIENT_OCCLUSION_MAP = 1 << 5, 
		SHADER_FUNCTION_SHADOW = 1 << 6,
		SHADER_FUNCTION_LIGHT = 1 << 7,
		SHADER_FUNCTION_SKY = 1 << 8,
		SHADER_FUNCTION_NONCULLING = 1 << 9,
		SHADER_FUNCTION_ALPHA_CLIP = 1 << 10, 
		SHADER_FUNCTION_SHADOW_MAP = 1 << 11,
		SHADER_FUNCTION_DEBUG =  1 << 12,
	}; 

	static std::wstring ConvertShaderFuncFlagToName(const J_SHADER_FUNCTION funcFlag)
	{
		return std::to_wstring(funcFlag);
	}
	static J_SHADER_VERTEX_LAYOUT ConvertMeshTypeToShaderVertexLayout(const J_MESHGEOMETRY_TYPE type)
	{  
		return type == J_MESHGEOMETRY_TYPE::STATIC ? SHADER_VERTEX_LAYOUT_STATIC : SHADER_VERTEX_LAYOUT_SKINNED;
	}
}